const { Pool } = require('pg');
require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');

// –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const token = process.env.TELEGRAM_BOT_TOKEN;
const bot = new TelegramBot(token, { polling: true });

// –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
const firstMessage = `
–®–∞–Ω–æ–≤–Ω—ñ –¥—Ä—É–∑—ñ!

–í—ñ—Ç–∞—é –≤—Å—ñ—Ö, —Ö—Ç–æ –ø—Ä–∏—î–¥–Ω–∞–≤—Å—è –¥–æ –º–æ–≥–æ —á–∞—Ç-–±–æ—Ç–∞ ‚ÄúSYRNYK‚Äù! üéâ
–¢—É—Ç —è –±—É–¥—É –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ –≤–∞–∂–ª–∏–≤—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ:
üîî –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ü—ñ–Ω
üõí –∞—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç
üöö —á–∞—Å –¥–æ—Å—Ç–∞–≤–∫–∏

–ó–≤–µ—Ä—Ç–∞—é –≤–∞—à—É —É–≤–∞–≥—É, —â–æ –∑ 7 –∂–æ–≤—Ç–Ω—è –¥—ñ—é—Ç—å –ù–û–í–Ü —Ü—ñ–Ω–∏. –ù–æ–≤—ñ —Ü—ñ–Ω–∏ –º–æ–∂–Ω–∞ –∑–Ω–∞–π—Ç–∏ —É —Ñ–∞–π–ª—ñ –Ω–∏–∂—á–µ. üìÑ‚¨áÔ∏è

–í –º–∞–π–±—É—Ç–Ω—å–æ–º—É —á–µ—Ä–µ–∑ —Ü–µ–π –±–æ—Ç –º–æ–∂–Ω–∞ –±—É–¥–µ —Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è, –∞–ª–µ –ø–æ–∫–∏ —â–æ, –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω—å –ø–∏—à—ñ—Ç—å –º–µ–Ω—ñ —É —á–∞—Ç, —è–∫ —ñ —Ä–∞–Ω—ñ—à–µ. üëå

–í–∞—à–∞ —Å–∏—Ä–æ–≤–∞—Ä, –Ü—Ä–∏–Ω–∞.
`;

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö PostgreSQL
const pool = new Pool({
    connectionString: process.env.DATABASE_URL,
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL-–∑–∞–ø—Ä–æ—Å–æ–≤
async function queryDB(query, values = []) {
    const client = await pool.connect();
    try {
        const res = await client.query(query, values);
        return res;
    } finally {
        client.release();
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function handleNewUser(msg) {
    const userId = msg.from.id;
    const firstName = msg.from.first_name;
    const lastName = msg.from.last_name || '';
    const username = msg.from.username || '';

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const result = await queryDB('SELECT * FROM users WHERE user_id = $1', [userId]);

    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if (result.rows.length === 0) {
        await queryDB(
            'INSERT INTO users (user_id, first_name, last_name, username, welcome_message_sent) VALUES ($1, $2, $3, $4, FALSE)',
            [userId, firstName, lastName, username]
        );

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.sendMessage(userId, firstMessage, { parse_mode: 'HTML' });

        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º PDF-—Ñ–∞–π–ª (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        const documentPath = './assets/Prix.pdf'; // –õ–æ–∫–∞–ª—å–Ω—ã–π –ø—É—Ç—å –∫ PDF-—Ñ–∞–π–ª—É
        const fileOptions = {
            filename: 'Prix.pdf',
            contentType: 'application/pdf' // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
        };
        bot.sendDocument(userId, documentPath, {}, fileOptions)
            .catch((error) => {
                console.log(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å PDF-—Ñ–∞–π–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}:`, error);
            });
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–µ `welcome_message_sent`
        await queryDB(
            'UPDATE users SET welcome_message_sent = TRUE WHERE user_id = $1',
            [userId]
        );
    
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
async function saveUserMessage(msg) {
    const userId = msg.from.id;
    const messageId = msg.message_id;
    const text = msg.text || '';

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º
    await queryDB(
        'INSERT INTO messages (user_id, message_id, text, date) VALUES ($1, $2, $3, NOW())',
        [userId, messageId, text]
    );
}

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º
bot.onText(/\/broadcast (.+)/, async (msg, match) => {
    const chatId = msg.chat.id;
    const broadcastMessage = match[1];

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    const adminIds = process.env.ADMIN_IDS.split(',').map(id => parseInt(id, 10));
    if (!adminIds.includes(msg.from.id)) {
        return bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.');
    }

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    const result = await queryDB('SELECT user_id FROM users');
    const users = result.rows;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    users.forEach(user => {
        bot.sendMessage(user.user_id, broadcastMessage)
            .catch((error) => {
                console.log(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.user_id}:`, error);
            });
    });

    bot.sendMessage(chatId, '–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–µ –≤—Å—ñ–º –ø—ñ–¥–ø–∏—Å–Ω–∏–∫–∞–º!');
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.onText(/\/myid/, (msg) => {
    bot.sendMessage(msg.chat.id, `–í–∞—à Telegram ID: ${msg.from.id}`);
});

/* // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, async (msg) => {
    const userId = msg.from.id;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.sendMessage(userId, firstMessage, { parse_mode: 'HTML' });

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º PDF-—Ñ–∞–π–ª (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    const documentPath = './assets/Prix.pdf'; // –õ–æ–∫–∞–ª—å–Ω—ã–π –ø—É—Ç—å –∫ PDF-—Ñ–∞–π–ª—É
    const fileOptions = {
        filename: 'Prix.pdf',
        contentType: 'application/pdf' // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
    };
    bot.sendDocument(userId, documentPath, {}, fileOptions)
        .catch((error) => {
            console.log(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å PDF-—Ñ–∞–π–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}:`, error);
        });

    
}); */

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', async (msg) => {
    const messageId = msg.message_id;
    const userId = msg.from.id;

    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–æ –ª–∏ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
        const processedMessageQuery = `
            SELECT COUNT(*) 
            FROM messages 
            WHERE message_id = $1 AND user_id = $2
        `;
        const result = await pool.query(processedMessageQuery, [messageId, userId]);

        if (result.rows[0].count > 0) {
            return; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —ç—Ç–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await handleNewUser(msg);

        // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –∫–æ–º–∞–Ω–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, /start), —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
        if (msg.text && !msg.text.startsWith('/')) {
            await saveUserMessage(msg);
            bot.sendMessage(msg.chat.id, `–î—è–∫—É—î–º–æ –∑–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è! –ú–∏ –≤—ñ–¥–ø–æ–≤—ñ–º–æ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º`);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
    }
});


// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ polling
bot.on('polling_error', (error) => {
    console.error('Polling error:', error);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ–±—ä–µ–∫—Ç error.response –∏ –µ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞
    if (error.response && error.response.body) {
        console.log('Error details:', error.response.body);
    } else {
        console.log('Error details are not available.');
    }
});
